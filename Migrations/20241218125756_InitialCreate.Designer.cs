// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagementApp.Data;

#nullable disable

namespace OrderManagementApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241218125756_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("OrderManagementApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderManagementApp.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("OrderManagementApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Product1",
                            Price = 10m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Product2",
                            Price = 20m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Product3",
                            Price = 30m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Product4",
                            Price = 40m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Product5",
                            Price = 50m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Product6",
                            Price = 60m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Product7",
                            Price = 70m
                        },
                        new
                        {
                            Id = 8,
                            Name = "Product8",
                            Price = 80m
                        },
                        new
                        {
                            Id = 9,
                            Name = "Product9",
                            Price = 90m
                        },
                        new
                        {
                            Id = 10,
                            Name = "Product10",
                            Price = 100m
                        },
                        new
                        {
                            Id = 11,
                            Name = "Product11",
                            Price = 110m
                        },
                        new
                        {
                            Id = 12,
                            Name = "Product12",
                            Price = 120m
                        },
                        new
                        {
                            Id = 13,
                            Name = "Product13",
                            Price = 130m
                        },
                        new
                        {
                            Id = 14,
                            Name = "Product14",
                            Price = 140m
                        },
                        new
                        {
                            Id = 15,
                            Name = "Product15",
                            Price = 150m
                        },
                        new
                        {
                            Id = 16,
                            Name = "Product16",
                            Price = 160m
                        },
                        new
                        {
                            Id = 17,
                            Name = "Product17",
                            Price = 170m
                        },
                        new
                        {
                            Id = 18,
                            Name = "Product18",
                            Price = 180m
                        },
                        new
                        {
                            Id = 19,
                            Name = "Product19",
                            Price = 190m
                        },
                        new
                        {
                            Id = 20,
                            Name = "Product20",
                            Price = 200m
                        },
                        new
                        {
                            Id = 21,
                            Name = "Product21",
                            Price = 210m
                        },
                        new
                        {
                            Id = 22,
                            Name = "Product22",
                            Price = 220m
                        },
                        new
                        {
                            Id = 23,
                            Name = "Product23",
                            Price = 230m
                        },
                        new
                        {
                            Id = 24,
                            Name = "Product24",
                            Price = 240m
                        },
                        new
                        {
                            Id = 25,
                            Name = "Product25",
                            Price = 250m
                        },
                        new
                        {
                            Id = 26,
                            Name = "Product26",
                            Price = 260m
                        },
                        new
                        {
                            Id = 27,
                            Name = "Product27",
                            Price = 270m
                        },
                        new
                        {
                            Id = 28,
                            Name = "Product28",
                            Price = 280m
                        },
                        new
                        {
                            Id = 29,
                            Name = "Product29",
                            Price = 290m
                        },
                        new
                        {
                            Id = 30,
                            Name = "Product30",
                            Price = 300m
                        });
                });

            modelBuilder.Entity("OrderManagementApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user1@example.com",
                            Name = "User1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user2@example.com",
                            Name = "User2"
                        });
                });

            modelBuilder.Entity("OrderManagementApp.Models.Order", b =>
                {
                    b.HasOne("OrderManagementApp.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderManagementApp.Models.OrderDetail", b =>
                {
                    b.HasOne("OrderManagementApp.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderManagementApp.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OrderManagementApp.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("OrderManagementApp.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("OrderManagementApp.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
